name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    # container:
    #     image: docker:19.03.12
    #     options: --privileged # if needed

    permissions:
      contents: write  # Allow write access to repository contents
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
    
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
      
    #   - name: Cache Docker Compose
    #     uses: actions/cache@v2
    #     with:
    #       path: /usr/local/bin/docker-compose
    #       key: ${{ runner.os }}-docker-compose-${{ hashFiles('**/docker-compose.yml') }}
    #       restore-keys: |
    #         ${{ runner.os }}-docker-compose-
    #   - name: Install Docker Compose
    #     if: steps.cache.outputs.cache-hit != 'true'
    #     run: |
    #       curl -L https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
    #       chmod +x /usr/local/bin/docker-compose
          
      - name: Build and Start Services
        run: docker-compose up --build -d

      - name: Seed Database
        run: |
          docker exec $(docker ps -qf "name=backend") chmod +x /app/scripts/seed_db.sh
          docker exec $(docker ps -qf "name=backend") /app/scripts/seed_db.sh /app/todos.db

    #   - name: Run Backend Tests
    #     run: docker exec $(docker ps -qf "name=backend") go test ./...

    #   - name: Run Frontend Tests
    #     run: docker exec $(docker ps -qf "name=frontend") npm run test

      - name: Update README with CI Badge
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
              STATUS="![CI](https://github.com/${{ github.repository }}/actions/workflows/deploy.yml/badge.svg?branch=main)"
          else
              STATUS="![CI](https://github.com/${{ github.repository }}/actions/workflows/deploy.yml/badge.svg?branch=main&status=failure)"
          fi

          # Replace the badge in README.md, ensuring only one badge is present
          if [[ "$OSTYPE" == "darwin"* ]]; then
              sed -i '' '1s|^.*\!\[CI\].*|'"$STATUS"'|g' README.md  # macOS
          else
              sed -i '1s|^.*\!\[CI\].*|'"$STATUS"'|g' README.md  # Linux/Windows
          fi

          # Git setup
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

          # Add, commit and push
          git add README.md
          git commit -m "Update README with CI badge" || echo "No changes to commit"
          git push https://${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }} HEAD:${{ github.ref }} || echo "No changes to push"

      - name: Stop Containers
        run: docker-compose down
